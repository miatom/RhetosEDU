//Module BookStore;
//Entity BookStore.Book;
//ShortString BookStore.Book.Code; 
//Autocode BookStore.Book.Code;
//ShortString BookStore.Book.Title;
//Integer  BookStore.Book.NumberOfPages;
//Integer BookStore.Book.NumberOfPages;
//ItemFilter BookStore.Book.CommonMisspelling 'book => book.Title.Contains("curiousity")';
//InvalidData BookStore.Book.CommonMisspelling 'It is not allowed to enter misspelled word "curiousity".';
//Reference BookStore.Book.Author BookStore.Person;

//Entity BookStore.Person;
//ShortString BookStore.Person.Name; 

//Entity BookStore.Comment; 
//Reference BookStore.Comment.Book BookStore.Book; 
//Detail  BookStore.Comment.Book;
//LongString BookStore.Comment.Text;

//Entity BookStore.ChildrenBook;
//Extends BookStore.ChildrenBook BookStore.Book;
//Integer BookStore.ChildrenBook.AgeFrom;
//Integer BookStore.ChildrenBook.AgeTo;
//IntegerRange BookStore.ChildrenBook.AgeFrom AgeTo; // A simple validation.

//Entity BookStore.ForeignBook;
//Extends BookStore.ForeignBook BookStore.Book;
//ShortString BookStore.ForeignBook.OriginalLanguage;
//Reference BookStore.ForeignBook.Translator BookStore.Person;

//Entity BookStore.Topic;
//ShortString BookStore.Topic.Name;

//Entity BookStore.BookTopic;
//Reference BookStore.BookTopic.Book BookStore.Book;
//Detail BookStore.BookTopic.Book;
//Reference BookStore.BookTopic.Topic BookStore.Topic;
//Required BookStore.BookTopic.Topic;
//UniqueMultiple BookStore.BookTopic.'Book Topic';

Module Bookstore
{
    Entity Book
    {
        ShortString Code { Autocode; }
        ShortString Title { Required; }
        Integer NumberOfPages { MinValue 10; MaxValue 2000;}
        DateTime CreatedAt { CreationTime; }
        Reference Author Bookstore.Person;
        
    }

    Entity Person
    {
        ShortString Name;
    }

    Entity Comment
    {
        Reference Book { Detail; }
        LongString Text;
    }
    Entity ChildrensBook
    {
        Extends Bookstore.Book;

        Integer AgeFrom;
        Integer AgeTo;
        IntegerRange AgeFrom AgeTo; // A simple validation.
    }

    Entity ForeignBook
    {
        Extends Bookstore.Book;

        ShortString OriginalLanguage;
        Reference Translator Bookstore.Person;
    }

    Entity Topic
    {
        ShortString Name { Unique; Required; }
    }    

    Entity BookTopic
    {
        Reference Book { Detail; }
        Reference Topic { Required; }

        UniqueMultiple 'Book Topic';
    }

    Browse TitlesAndAuthors Bookstore.Book
    {
        Take Title;
        Take 'Author.Name';
        Take TranslatorName 'Extension_ForeignBook.Translator.Name';
    }

    SqlQueryable BookInfo 
    "
        SELECT
            b.ID,
            NumberOfComments = COUNT(c.ID)
        FROM
            Bookstore.Book b
            LEFT JOIN Bookstore.Comment c ON c.BookID = b.ID
        GROUP BY
            b.ID
    "
    {
        Extends Bookstore.Book;
        Integer NumberOfComments;

        AutodetectSqlDependencies;
    }

   
   
}

